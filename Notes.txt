We start with 3 nodes, the nodes will have scores of:
    interaction, similar_words

Likes should have the source of the like, but for simplicity, that
is not added. Comparing scores simply is an interaction to interaction
distance, the closer to zero, the closer the match when comparing

Popularity of a video is used by finding the average interaction score and
everything above that score is considered popular.

Every round:
A video is created
    Calculate interactions average on the network
A video is added. (after initial 3 nodes created)
    The new video is created with only "similar words" score and interactions 0.
    And existing node will be picked to point to the new node via similar words.
    Two other edges will be formed so the new video is recommending existing videos.
    This will be by similar words "only" for one, and similar words combined with
    the highest interaction threshold with the other.
One edge will removed
    A random edge will be removed
    Find stale nodes with interaction of >= 1 but less than interaction_avg
    take the node with the stalest interaction, randomly grab one of the edges and remove it
Score update
    increase interaction score based on the "in-degree".

